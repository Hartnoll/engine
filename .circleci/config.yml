version: 2.1

jobs:
  get_code:
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/engine
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/engine

  test:
    docker:
      - image: circleci/openjdk:latest
    working_directory: ~/engine/engine
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: backend-cache-v1-{{ checksum "pom.xml" }}
      - run: mvn -f pom.xml dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: backend-cache-v1-{{ checksum "pom.xml" }}
      - run:
          name: Run Tests
          command: mvn -f pom.xml integration-test

  deploy:
    docker:
      - image: circleci/openjdk:latest
    working_directory: ~/engine
    steps:
      - add_ssh_keys:
        - fingerprints:
          - "a6:a7:4c:76:07:69:9c:cb:e2:55:06:94:bb:06:8a:27"
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: mvn-cache-v1-{{ checksum "pom.xml" }}
      - run:
          name: Deploy
          command: |
            cd engine
            rm -rf target
            echo "Deleted target/ folder"
            mvn package
            echo "Generating jar file"
            cd ..
            scp -o StrictHostKeyChecking=no target/engine-0.0.1-SNAPSHOT.jar eubuntu@100.26.152.21:/home/ubuntu
            echo "Copied jar file from local machine to ec2 instance"
            echo "Connecting to ec2 instance and starting server using java -jar command"
            ssh -f o StrictHostKeyChecking=no ubuntu@100.26.152.21:/home/ubuntu ./execute_commands_on_ec2.sh
workflows:
  version: 2
  workflow:
    jobs:
      - get_code
      - test:
          filters:
            branches:
              only:
                - development
                - main
          requires:
            - get_code
      - deploy:
          filters:
            branches:
              only: main
          requires:
            - test
